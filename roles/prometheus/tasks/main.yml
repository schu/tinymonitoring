---
- name: create group
  group:
    name: prometheus
    system: yes

- name: create user
  user:
    name: prometheus
    group: prometheus
    system: yes
    createhome: no
    home: "{{ prometheus_home_dir }}"
    shell: /sbin/nologin

- name: create directories
  file:
    state: directory
    path: "{{ item }}"
    owner: prometheus
    group: prometheus
    mode: 0750
  with_items:
    - "{{ prometheus_home_dir }}"
    - "{{ prometheus_data_dir }}"
    - "{{ prometheus_config_dir }}"

- name: determine installed prometheus version
  shell: prometheus --version 2>&1 | awk '/prometheus, version/{print $3}'
  register: prometheus_version_output

- name: set prometheus_installed_version fact
  set_fact: prometheus_installed_version="{{prometheus_version_output.stdout}}"

- name: install prometheus to /usr/local/bin
  shell: |
    cd `mktemp -d`
    curl -fsSLO https://github.com/prometheus/prometheus/releases/download/v{{prometheus_version}}/prometheus-{{prometheus_version}}.linux-amd64.tar.gz
    tar xvfz prometheus-{{prometheus_version}}.linux-amd64.tar.gz
    install -m 0755 prometheus-{{prometheus_version}}.linux-amd64/prometheus /usr/local/bin/prometheus
    install -m 0755 prometheus-{{prometheus_version}}.linux-amd64/promtool /usr/local/bin/promtool
  when: prometheus_installed_version != prometheus_version
  notify: restart prometheus

# Alert rules are part of the Prometheus config, so load them
# here. promtool can only be used against the root Prometheus
# config, the alert_rules are checked from there then.
- name: install alert_rules config
  copy:
    src: "{{ alertmanager_rules_config }}"
    dest: /etc/prometheus/alert_rules.yml
    owner: prometheus
    group: prometheus
  notify: reload prometheus

- name: install prometheus config
  copy:
    src: "{{ prometheus_config }}"
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    validate: promtool check config %s
  notify: reload prometheus

- name: install prometheus.service
  template:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service
  notify: restart prometheus

- name: enable prometheus.service
  systemd:
    name: prometheus
    enabled: true

- import_tasks: blackbox-exporter.yml
  when: install_blackbox_exporter | bool

- import_tasks: alertmanager.yml
  when: install_alertmanager | bool

- name: clean up old binaries
  shell: |
    rm -f /usr/local/bin/prometheus-*
    rm -f /usr/local/bin/promtool-*
    rm -f /usr/local/bin/alertmanager-*
    rm -f /usr/local/bin/amtool-*
    rm -f /usr/local/bin/blackbox_exporter-*
  tags: ['never', 'clean-up-old-binaries']
